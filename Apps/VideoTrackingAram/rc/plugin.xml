<plugin id="VideoTrackingAram">

    <requirement id="servicesReg" />
    <requirement id="tracker" />
    <requirement id="trackerAram" />
    <requirement id="arMedia" />

    <extension implements="::fwServices::registry::AppConfig">
        <id>VideoTrackingAram</id>
        <type>parameters</type>
        <config>

        <object type="::fwData::Composite">

            <service uid="gui" impl="::gui::frame::DefaultFrame" type="::fwGui::IFrameSrv" autoConnect="no">
                <gui>
                    <frame>
                        <name>VideoTrackingAram</name>
                        <icon>Bundles/VideoTrackingAram_0-1/videotracking.ico</icon>
                    </frame>
                    <toolBar />
                </gui>
                <registry>
                    <toolBar sid="toolbar" start="yes" />
                    <view sid="cameraView" start="yes" />
                </registry>
            </service>

            <service uid="toolbar" type="::fwGui::IToolBarSrv" impl="::gui::aspect::DefaultToolBarSrv" autoConnect="no" >
                <gui>
                    <layout>
                        <editor />
                        <menuItem name="start" icon="Bundles/arMedia_0-1/icons/start-cam.svg"/>
                        <menuItem name="stop"  icon="Bundles/arMedia_0-1/icons/stop-cam.svg"/>
                        <menuItem name="pause" icon="Bundles/arMedia_0-1/icons/pause-cam.svg" />
                        <separator/>
                        <menuItem name="startAram" icon="Bundles/VideoTrackingAram_0-1/start-aram.svg" style="radio"/>
                        <menuItem name="stopAram" icon="Bundles/VideoTrackingAram_0-1/stop-aram.svg" />
                        <spacer/>
                        <editor/>
                    </layout>
                </gui>
                <registry>
                    <editor sid="CameraSelector" start="yes" />
                    <menuItem sid="startVideo" start="yes" />
                    <menuItem sid="stopVideo" start="yes" />
                    <menuItem sid="pauseVideo" start="yes" />
                    <menuItem sid="startAram" start="yes" />
                    <menuItem sid="stopAram" start="yes" />
                    <editor sid="${GENERIC_UID}_Status" start="yes" />
                </registry>
            </service>

            <service uid="startVideo" type="::fwGui::IActionSrv" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>frameGrabber/startCamera</slot>
                </slots>
            </service>

            <service uid="stopVideo" type="::fwGui::IActionSrv" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>frameGrabber/stopCamera</slot>
                </slots>
            </service>

            <service uid="pauseVideo" type="::fwGui::IActionSrv" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>frameGrabber/pauseCamera</slot>
                </slots>
            </service>

            <service uid="startAram" type="::fwGui::IActionSrv" impl="::gui::action::StarterActionService" autoConnect="no">
              <start uid="tracker" />
           </service>


            <service uid="stopAram" type="::fwGui::IActionSrv" impl="::gui::action::SSlotCaller" autoConnect="no">
                <slots>
                    <slot>tracker/stop</slot>
                </slots>
            </service>

            <service uid="cameraView" type="::gui::view::IView" impl="::gui::view::DefaultView" autoConnect="no" >
                <gui>
                    <layout type="::fwGui::CardinalLayoutManager" >
                        <view align="center" />
                        <view align="right" />
                    </layout>
                </gui>
                <registry>
                    <view sid="genericScene" start="yes" />
                    <view sid="trackingEditor" start="yes" />
                </registry>
            </service>
            
            <service uid="genericScene" impl="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoConnect="yes">
                <scene>
                    <renderer id="default" background="0.0" />
                    <adaptor id="videoAdapter" class="::visuVTKARAdaptor::SVideoAdapter" objectId="image">
                        <config renderer="default" />
                    </adaptor>
                    <adaptor id="interactorStyle" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                        <config renderer="default" style="InteractorStyle2DForNegato" />
                    </adaptor>
                </scene>
            </service>

            <service uid="trackingEditor" impl="::uiTrackingAramQt::STrackerAramEditor" type="::gui::editor::IEditor" autoConnect="yes"/>

            <service uid="tracker" impl="::trackerAram::SAramTracker" autoConnect="no" worker="tracking">
                <config>
                    <timelineVideo>frameTL</timelineVideo>
                    <camera>camera</camera>
                    <imageKey>image</imageKey>
                    <cameraSettings>D:\DevAram2\Build\D\camera_data.xml</cameraSettings>
                    <track>
                        <marker id="3" timeline="markerTL" />
                    </track>
                    <debugMarkers>yes</debugMarkers>
                </config>
            </service>
                        
            <service uid="synchronizer" impl="::videoTools::SFrameMatrixSynchronizer" autoConnect="no" worker="videoWorker">
                <frames>
                    <frame from="frameTL" to="image" />
                </frames>
                <framerate>20</framerate>
            </service>

            <service uid="${GENERIC_UID}_Status" impl="::uiTools::editor::SStatus" type="::gui::editor::IEditor" autoConnect="no">
                <green>Tag detected</green>
                <orange>No tag deteted</orange>
                <red>Aram not started</red>
            </service>
            
            <item key="camera">
                <object uid="cameraUid" type="::arData::Camera">
                    <service uid="CameraSelector" impl="::videoQt::editor::SCamera" type="::gui::editor::IEditor" autoConnect="no">
                        <videoSupport>yes</videoSupport>
                    </service>
                </object>
            </item>

            <item key="markerTL">
                <object uid="tableTLUid" type="::arData::MarkerTL" />
            </item>

            <item key="image">
                <object uid="imageUid" type="::fwData::Image" />
            </item>

            <item key="frameTL">
                <object uid="frameTLUid" type="::extData::FrameTL">
                    <service uid="frameGrabber" impl="::videoQt::SFrameGrabber" autoConnect="no">
                        <cameraFwId>cameraUid</cameraFwId>
                    </service>
                    <value>100</value> <!--  400  -->
                </object>
            </item>
            
            <connect>
                <signal>cameraUid/idModified</signal>
                <slot>frameGrabber/stopCamera</slot>
            </connect>

            <connect>
                <signal>trackingEditor/constantChanged</signal>
                <slot>tracker/changeConstant</slot>
            </connect>

            <connect>
                <signal>trackingEditor/tagsDisplayed</signal>
                <slot>tracker/displayTags</slot>
            </connect>

            <connect>
                <signal>tracker/aramNotStarted</signal>
                <slot>${GENERIC_UID}_Status/changeToRed</slot>
            </connect>

            <connect>
                <signal>tracker/tagDetected</signal>
                <slot>${GENERIC_UID}_Status/changeToGreen</slot>
            </connect>

            <connect>
                <signal>tracker/noTagDetected</signal>
                <slot>${GENERIC_UID}_Status/changeToOrange</slot>
            </connect>

            <start uid="gui" />
            <start uid="frameGrabber" />
            <start uid="synchronizer" />

        </object>
        </config>
    </extension>

</plugin>
